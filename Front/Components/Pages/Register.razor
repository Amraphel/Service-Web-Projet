@page "/register"
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject LoginService loginService
@inject AuthenticationStateProvider authStateProvider


        <EditForm Model="@registerModel" OnValidSubmit="HandleLogin">
            <div class="form-group">
                <label for="username">Nom d'utilisateur</label>
                <InputText id="username" class="form-control" @bind-Value="registerModel.Username" />
            </div>

            <div class="form-group">
                <label for="password">Mot de passe</label>
                <InputText id="password" class="form-control" @bind-Value="registerModel.Password" type="password" />
            </div>

            <div class="form-group">
                <label for="email">Email</label>
                <InputText id="email" class="form-control" @bind-Value="registerModel.Email" type="email" />
            </div>
            <br />
            <button class="btn btn-primary" type="submit">S'inscrire</button>
        </EditForm>

        <span style="color: red">@error</span>

        @code {
        private RegisterModel registerModel = new RegisterModel();
        private string error = "";

        private async void HandleLogin()
        {
            var user = await loginService.RegisterUser(registerModel.Username, registerModel.Password, registerModel.Email);
            if (user != null)
            {
                error = "";
                NavigationManager.NavigateTo("/login");
            }
            else
            {
            error = "Nom d'utilisateur/Mot de passe/Email invalide !";
            }
        }

        private class RegisterModel
        {
            public string Username { get; set; } = "";
            public string Password { get; set; } = "";
            public string Email { get; set; } = "";
        }
    }